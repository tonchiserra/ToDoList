{"version":3,"sources":["components/TodoItem.jsx","components/TodoList.jsx","components/Footer.jsx","App.jsx","index.js"],"names":["TodoItem","todo","toggleTodo","id","task","completed","className","type","checked","onChange","TodoList","todos","map","Footer","href","target","rel","KEY","App","useState","setTodos","taskRef","useRef","useEffect","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","Fragment","ref","placeholder","onClick","current","value","prevTodos","uuidv4","newTodos","find","filter","length","ReactDOM","render","document","getElementById"],"mappings":"mTAGO,SAASA,EAAT,GAAwC,IAApBC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,WACxBC,EAAuBF,EAAvBE,GAAIC,EAAmBH,EAAnBG,KAAMC,EAAaJ,EAAbI,UAMjB,OACE,+BACE,uBAAOC,UAAU,gBAAgBC,KAAK,WAAWC,QAASH,EAAWI,SANvD,WAChBP,EAAWC,MAMRE,EAAY,iCAASD,IAAiBA,KCTtC,SAASM,EAAT,GAAyC,IAArBC,EAAoB,EAApBA,MAAOT,EAAa,EAAbA,WAChC,OACE,6BACGS,EAAMC,KAAI,SAACX,GAAD,OACT,cAAC,EAAD,CAAwBA,KAAMA,EAAMC,WAAYA,GAAjCD,EAAKE,S,MCLrB,SAASU,IACd,OACE,qFACmD,mBAAGC,KAAK,8BAA8BC,OAAO,SAASC,IAAI,WAA1D,2BADnD,OCCJ,IAAMC,EAAM,gBAEL,SAASC,IACd,MAA0BC,mBAAS,IAAnC,mBAAOR,EAAP,KAAcS,EAAd,KAEMC,EAAUC,mBAEhBC,qBAAU,WACR,IAAMC,EAAcC,KAAKC,MAAMC,aAAaC,QAAQX,IAChDO,GACFJ,EAASI,KAEV,IAEHD,qBAAU,WACRI,aAAaE,QAAQZ,EAAKQ,KAAKK,UAAUnB,MACxC,CAACA,IAuBJ,OACE,eAAC,IAAMoB,SAAP,WACE,0BAASzB,UAAU,cAAnB,UACE,oBAAIA,UAAU,QAAd,sBACA,uBAEA,sBAAKA,UAAU,mBAAf,UACE,uBAAOA,UAAU,iBAAiB0B,IAAKX,EAASd,KAAK,OAAO0B,YAAY,aACxE,wBAAQ3B,UAAU,kBAAkB4B,QAnB5B,WACd,IAAM9B,EAAOiB,EAAQc,QAAQC,MAChB,KAAThC,IAEJgB,GAAS,SAACiB,GACR,MAAM,GAAN,mBAAWA,GAAX,CAAsB,CAAClC,GAAImC,cAAUlC,OAAMC,WAAW,QAGxDgB,EAAQc,QAAQC,MAAQ,OAWlB,oBAGF,cAAC,EAAD,CAAUzB,MAAOA,EAAOT,WAhCX,SAACC,GAClB,IAAMoC,EAAQ,YAAO5B,GACfV,EAAOsC,EAASC,MAAK,SAACvC,GAAD,OAAUA,EAAKE,KAAOA,KACjDF,EAAKI,WAAaJ,EAAKI,UAIvBe,EAASmB,MA2BL,sBAAKjC,UAAU,sBAAf,uBAAgDK,EAAM8B,QAAO,SAACxC,GAAD,OAAWA,EAAKI,aAAWqC,OAAxF,6BAEF,cAAC,EAAD,OCvDNC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.9d50a7be.chunk.js","sourcesContent":["import React from 'react';\nimport './TodoItem.css';\n\nexport function TodoItem({ todo, toggleTodo }){\n  const {id, task, completed} = todo;\n\n  const todoClick = () => {\n    toggleTodo(id);\n  };\n\n  return(\n    <li>\n      <input className=\"task-checkbox\" type=\"checkbox\" checked={completed} onChange={todoClick}></input>\n      {completed ? <strike>{task}</strike> : task}\n    </li>\n  );\n}","import React from 'react';\nimport './TodoList.css';\nimport { TodoItem } from './TodoItem.jsx';\n\nexport function TodoList({ todos, toggleTodo }){\n  return(\n    <ul>\n      {todos.map((todo) => (\n        <TodoItem key={todo.id} todo={todo} toggleTodo={toggleTodo} />\n      ))}\n    </ul>\n  );\n}","import React from 'react';\nimport './Footer.css';\n\nexport function Footer(){\n  return(\n    <footer>\n      &copy; Copyright 2021 - App web desarrollada por <a href=\"https://gserra.netlify.app/\" target=\"_blank\" rel=\"noopener\">Gonzalo Serra</a>.\n    </footer>\n  );\n}","import React, { useState, useRef, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport './App.css';\nimport { TodoList } from './components/TodoList.jsx';\nimport { Footer } from './components/Footer.jsx';\n\nconst KEY = \"todoApp.todos\"\n\nexport function App() {\n  const [todos, setTodos] = useState([]);\n\n  const taskRef = useRef();\n\n  useEffect(() => {\n    const storedTodos = JSON.parse(localStorage.getItem(KEY));\n    if (storedTodos) {\n      setTodos(storedTodos);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(KEY, JSON.stringify(todos));\n  }, [todos]);\n\n  const toggleTodo = (id) => {\n    const newTodos = [...todos];\n    const todo = newTodos.find((todo) => todo.id === id);\n    todo.completed = !todo.completed;\n    //if(todo.completed){\n      //todo.task = \"hola\".strike()\n    //}\n    setTodos(newTodos);\n  }\n\n  const addTask = () => {\n    const task = taskRef.current.value;\n    if (task === '') return;\n\n    setTodos((prevTodos) => {\n      return [...prevTodos, {id: uuidv4(), task, completed: false}]\n    })\n\n    taskRef.current.value = null;\n  }\n\n  return(\n    <React.Fragment>\n      <section className=\"app-content\">\n        <h1 className=\"title\">ToDoList</h1>\n        <hr></hr>\n\n        <div className=\"add-task-content\">\n          <input className=\"input-add-task\" ref={taskRef} type=\"text\" placeholder=\"Add task\"></input>\n          <button className=\"button-add-task\" onClick={addTask} >Add</button>\n        </div>\n\n        <TodoList todos={todos} toggleTodo={toggleTodo} />\n\n        <div className=\"text-task-to-finish\">Te quedan {todos.filter((todo) => !todo.completed).length} tareas por terminar</div>\n      </section>\n      <Footer />\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'\nimport { App } from './App.jsx';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}